function create_website() {
    bash ~/tools/Magento-2-Bash-Localhost-Installation-Script/install.sh $1 $2 $3 $4
}

function create_pr_website() {
    bash ~/tools/Magento-2-Bash-Localhost-Installation-Script/install_pr.sh $1 $2 $3 $4
}

function add_module() {
    bash ~/tools/Magento-2-Bash-Localhost-Installation-Script/add_module.sh $1 $2 $3
}

function update_modules() {
    bash ~/tools/Magento-2-Bash-Localhost-Installation-Script/update_modules.sh
}

function code_quality() {
    bash ~/tools/Magento-2-Bash-Localhost-Installation-Script/code_quality.sh $1 $2 $3
}

function import_website() {
    bash ~/tools/Magento-2-Bash-Localhost-Installation-Script/import.sh $1
}

function update_website() {
    bash ~/tools/Magento-2-Bash-Localhost-Installation-Script/update.sh $1
}

_site () 
{ 
    local cur=${COMP_WORDS[COMP_CWORD]};
    COMPREPLY=($(compgen -W "$(ls ~/domains)" -- $cur))
}

site () 
{ 
    if [ $# -eq 0 ]; then
        DOMAIN=`pwd | cut --delimiter="/" -f 5`;
    else
        DOMAIN="$@";
    fi;
    if [ -d ~/domains/$DOMAIN ]; then
        cd ~/domains/$DOMAIN;
    else
        echo "Given website does not exists";
    fi
}
complete -F _site site

bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'

# Magerun aliasses
alias m='magerun'
alias m2='magerun2'

# PHP aliasses
alias php7='php7.0'
alias composer7='php7 /usr/bin/composer'
alias php71='php7.1'
alias composer71='php71 /usr/bin/composer'

# PhpStorm aliasses
alias p='phpstorm'

# PHPX - Xdebug
alias phpx='XDEBUG_CONFIG="idekey=PHPSTORM" php  -dxdebug.remote_enable=on -f'
alias xphp='XDEBUG_CONFIG="idekey=PHPSTORM" php  -dxdebug.remote_enable=on -f'
alias phpx7='XDEBUG_CONFIG="idekey=PHPSTORM" php7.0  -dxdebug.remote_enable=on -f'
alias xphp7='XDEBUG_CONFIG="idekey=PHPSTORM" php7.0  -dxdebug.remote_enable=on -f'

# Git aliasses
alias gs='git status'
alias gc='git commit'
alias ga='git add'
alias gb='git branch'
alias gl='git log'
alias gco='git checkout'
alias gcom='git checkout master'
alias gam='git commit --amend --no-edit'
alias gp='git push'
alias gpom='git push origin master'
alias gm='git merge'
alias gd='git diff'

# Composer Lib Development alias
alias cld='composer_lib_development'

# Update Developer Programs Linux
alias update_postman='sudo rm -rf /opt/Postman/; wget https://dl.pstmn.io/download/latest/linux64 -O postman.tar.gz; sudo tar -xzf postman.tar.gz -C /opt; rm postman.tar.gz'



# Custom prompt
function parse_git_branch() { # Git Branch
  BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
  if [ ! "${BRANCH}" == "" ]
  then
    echo "[${BRANCH}]"
  else
    echo ""
  fi
}

function parse_git_tag() { # Git Tag
  TAG=`git describe --abbrev=0 --tags 2> /dev/null`
  if [ ! "${TAG}" == "" ]
  then
    echo "[${TAG}]"
  else
    echo ""
  fi
}

# PS1 Line
PS1="\[\e[00;33m\]\u\[\e[0m\]\[\e[00;37m\]@\h:\[\e[0m\]\[\e[0;31m\]\`parse_git_branch\`\[\e[m\]\[\e[0m\]\[\e[0;38m\]\`parse_git_tag\`\[\e[m\]\[\e[00;36m\][\w]\[\e[0m\]\[\e[00;32m\]\nbash> \[\e[0m\]"

# Tar SSH Pipe
tar_ssh_pipe ()
{
    if [ $# -eq 3 ]; then
        ssh $1  "cd $2 && tar -cf - * | gzip -9" > $3.tar.gz
    else
        echo "No host, directory path and filename specified"
    fi;
}
